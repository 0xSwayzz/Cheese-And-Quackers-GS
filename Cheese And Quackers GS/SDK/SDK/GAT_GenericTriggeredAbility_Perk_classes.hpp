#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: GAT_GenericTriggeredAbility_Perk

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GAT_GenericTriggeredAbility_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAT_GenericTriggeredAbility_Perk.GAT_GenericTriggeredAbility_Perk_C
// 0x0060 (0x0A80 - 0x0A20)
class UGAT_GenericTriggeredAbility_Perk_C : public UGAT_GenericTriggeredAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GAT_GenericTriggeredAbility_Perk_C; // 0x0A20(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         StreakCount;                                       // 0x0A28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2C[0x4];                                      // 0x0A2C(0x0004)(Fixing Size After Last Property [ Dumper-8 ])
	TMap<struct FGameplayTag, class UClass*>      MAP_DamageElement;                                 // 0x0A30(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GAT_GenericTriggeredAbility_Perk(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData_0);
	void CheckStreak(int32 CountPerTrigger, int32 MaxStreak, int32* StreakCount_0, bool* StreakMaxed);
	void GrantFragmentCharge(int32 Grant_Amount);
	void GetCorrectBalanceValue(const struct FScalableFloat& Lookup_Base, const struct FScalableFloat& Lookup_Commander, const struct FGameplayTag& Commander_Tag, float* Value);
	void SetDamageElement(const struct FGameplayTagContainer& InstegatorTags, class UClass* DefaultEffect, class UClass** ElementEffectOut, bool* EffectWasChanged);
	void GrantRegenItemToOwner(class AFortPlayerPawn* FortPlayerPawn_0, class UFortWorldItemDefinition* ItemToGive, int32 NumberToGive, bool NotifyPlayer, bool bResetRegenCooldown);
	void CalcStreakBreakerThreshold(float PROC_Chance__0_1_, int32* Streak_Breaker_Threshold);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAT_GenericTriggeredAbility_Perk_C">();
	}
	static class UGAT_GenericTriggeredAbility_Perk_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAT_GenericTriggeredAbility_Perk_C>();
	}
};

}

