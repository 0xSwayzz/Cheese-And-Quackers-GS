#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: SubgameOptionButton

#include "Basic.hpp"

#include "SubgameOptionButton_classes.hpp"
#include "SubgameOptionButton_parameters.hpp"


namespace SDK
{

// Function SubgameOptionButton.SubgameOptionButton_C.SetupTile
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Key_Art                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              Color_Fill                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              Color_Gradient                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      Description                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      SpecialMessage                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FLinearColor&              Message_BackgroundColor                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      StandardMessageLine1                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FText&                      StandardMessageLine2                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void USubgameOptionButton_C::SetupTile(class UTexture2D* Key_Art, const struct FLinearColor& Color_Fill, const struct FLinearColor& Color_Gradient, const class FText& Title, const class FText& Description, const class FText& SpecialMessage, const struct FLinearColor& Message_BackgroundColor, const class FText& StandardMessageLine1, const class FText& StandardMessageLine2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubgameOptionButton_C", "SetupTile");

	Params::SubgameOptionButton_C_SetupTile Parms{};

	Parms.Key_Art = Key_Art;
	Parms.Color_Fill = std::move(Color_Fill);
	Parms.Color_Gradient = std::move(Color_Gradient);
	Parms.Title = std::move(Title);
	Parms.Description = std::move(Description);
	Parms.SpecialMessage = std::move(SpecialMessage);
	Parms.Message_BackgroundColor = std::move(Message_BackgroundColor);
	Parms.StandardMessageLine1 = std::move(StandardMessageLine1);
	Parms.StandardMessageLine2 = std::move(StandardMessageLine2);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SubgameOptionButton.SubgameOptionButton_C.OnTileFocused
// (BlueprintCallable, BlueprintEvent)

void USubgameOptionButton_C::OnTileFocused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubgameOptionButton_C", "OnTileFocused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SubgameOptionButton.SubgameOptionButton_C.OnTileUnfocused
// (BlueprintCallable, BlueprintEvent)

void USubgameOptionButton_C::OnTileUnfocused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubgameOptionButton_C", "OnTileUnfocused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SubgameOptionButton.SubgameOptionButton_C.BndEvt__PlayButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USubgameOptionButton_C::BndEvt__PlayButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubgameOptionButton_C", "BndEvt__PlayButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");

	Params::SubgameOptionButton_C_BndEvt__PlayButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SubgameOptionButton.SubgameOptionButton_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USubgameOptionButton_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubgameOptionButton_C", "PreConstruct");

	Params::SubgameOptionButton_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SubgameOptionButton.SubgameOptionButton_C.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void USubgameOptionButton_C::BP_OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubgameOptionButton_C", "BP_OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SubgameOptionButton.SubgameOptionButton_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USubgameOptionButton_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubgameOptionButton_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SubgameOptionButton.SubgameOptionButton_C.EventOtherTileFocused
// (BlueprintCallable, BlueprintEvent)

void USubgameOptionButton_C::EventOtherTileFocused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubgameOptionButton_C", "EventOtherTileFocused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SubgameOptionButton.SubgameOptionButton_C.RefreshSubGameDisplay
// (Event, Public, BlueprintEvent)
// Parameters:
// const struct FSubgameDisplayData&       SubGame                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void USubgameOptionButton_C::RefreshSubGameDisplay(const struct FSubgameDisplayData& SubGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubgameOptionButton_C", "RefreshSubGameDisplay");

	Params::SubgameOptionButton_C_RefreshSubGameDisplay Parms{};

	Parms.SubGame = std::move(SubGame);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SubgameOptionButton.SubgameOptionButton_C.BndEvt__Image_KeyArt_K2Node_ComponentBoundEvent_1_onLoadingCompleted__DelegateSignature
// (BlueprintEvent)

void USubgameOptionButton_C::BndEvt__Image_KeyArt_K2Node_ComponentBoundEvent_1_onLoadingCompleted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubgameOptionButton_C", "BndEvt__Image_KeyArt_K2Node_ComponentBoundEvent_1_onLoadingCompleted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SubgameOptionButton.SubgameOptionButton_C.ExecuteUbergraph_SubgameOptionButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USubgameOptionButton_C::ExecuteUbergraph_SubgameOptionButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SubgameOptionButton_C", "ExecuteUbergraph_SubgameOptionButton");

	Params::SubgameOptionButton_C_ExecuteUbergraph_SubgameOptionButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

